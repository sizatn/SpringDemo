<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
     http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">

	<description>Spring Configuration</description>

	<!-- load configuration file -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:springdemo.properties" />

	<!-- scan package @Component @Repository @Service, use "," to separate if have more base-packages -->
	<context:component-scan base-package="com.sizatn.springdemo" use-default-filters="false">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- load properties instance, @Value("#{sd_prop['jdbc.driver']}") String jdbcDriver -->
	<util:properties id="sd_prop" location="classpath:springdemo.properties" local-override="true" />

	<!-- druid datasource configuration -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.pool.init}" />
		<property name="minIdle" value="${jdbc.pool.minIdle}" /> 
		<property name="maxActive" value="${jdbc.pool.maxActive}" />
		<property name="maxWait" value="60000" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<property name="defaultAutoCommit" value="true" />
		<property name="validationQuery" value="select 1 from dual" />
		<property name="filters" value="stat" />
		<property name="proxyFilters" ref="logFilter" />
	</bean>
	
	<!-- druid targetdatasource configuration -->
	<bean id="targetDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${target.jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.pool.init}" />
		<property name="minIdle" value="${jdbc.pool.minIdle}" /> 
		<property name="maxActive" value="${jdbc.pool.maxActive}" />
		<property name="maxWait" value="60000" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<property name="defaultAutoCommit" value="true" />
		<property name="validationQuery" value="select 1 from dual" />
		<property name="filters" value="stat" />
		<property name="proxyFilters" ref="logFilter" />
	</bean>

	<bean id="logFilter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
		<property name="statementExecutableSqlLogEnable" value="false" />
	</bean>
	
	<bean id="dynamicDataSourceWithManual" class="com.sizatn.springdemo.common.database.DynamicDataSourceWithManual">
 		<property name="targetDataSources">
 			<map key-type="java.lang.String">
 				<entry value-ref="dataSource" key="dataSource"/>
 				<entry value-ref="targetDataSource" key="targetDataSource"/>
 			</map>
 		</property>
 		<property name="defaultTargetDataSource" ref="dataSource"/>
 	</bean>

	<!-- transaction -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- scan @Transactional Annotation -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

</beans>